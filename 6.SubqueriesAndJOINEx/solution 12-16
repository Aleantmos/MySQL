use `geography_join`;

-- 12. Highest Peaks in Bulgaria
select c.`country_code`, m.`mountain_range`, p.`peak_name`, p.`elevation`
from `peaks` as p
inner join `mountains` as m on p.`mountain_id` = m.`id`
inner join `mountains_countries` as c on c.`mountain_id` = m.`id`
where c.`country_code` = "BG" and p.`elevation` > 2835
order by p.`elevation` desc;

-- 13. Count Mountain Ranges
select mc.`country_code`, count(m.`mountain_range`) as "mountain_range"
from mountains as m
inner join `mountains_countries` as mc on mc.`mountain_id` = m.`id`
where mc.`country_code` in ("BG", "RU", "US")
group by mc.`country_code`
order by "mountain_range" desc;

-- 14. Countries with Rivers

select c.`country_name`, r.`river_name`
from `countries` as c
left join `countries_rivers` as cr on cr.`country_code` = c.`country_code`
left join `rivers` as r on r.`id` = cr.`river_id`
where c.`continent_code` = "AF"
order by `country_name`
limit 5;

-- 15. Continents and Currencies

select `continent_code`, `currency_code`, count(`currency_code`) as "currency_usage"
from `countries` as c1
group by `continent_code`, `currency_code`
having `currency_usage` = (
select count(`currency_code`) as `count`
from countries c2
where c2.`continent_code` = c1.`continent_code`
group by c2.`currency_code`
order by `count` desc
limit 1
) and `currency_usage` > 1
order by `continent_code`, `currency_code`;

-- 16. Countries Without Any Mountains
select count(c.`country_code`)
from `countries` as c
left join `mountains_countries` as mc on c.`country_code` = mc.`country_code`
left join `mountains`as m on mc.`mountain_id` = m.`id`
where m.`id` is null;



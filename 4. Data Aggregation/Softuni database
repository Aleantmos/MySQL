#12. Employees Minimum Salaries
USE `soft_uni1`;
SELECT `department_id`, min(`salary`) AS `minimum_salary` FROM `employees`
WHERE `hire_date` > "2000-01-01"
GROUP BY `department_id`
HAVING `department_id` IN (2, 5, 7)
ORDER BY `department_id`;


#13. Employees Average Salaries
#1)Select all high paid employees who earn more than 30000 into a new table
CREATE TABLE `salary_more_than` 
AS SELECT * FROM `employees`
WHERE `salary` > 3000;

#2)Then delete all high paid employees who have manager_id = 42 from the new table
DELETE FROM `salary_more_than`
WHERE `manager_id` = 42;

#3)Then increase the salaries of all high paid employees with department_id = 1 with 5000 in the new table
UPDATE `salary_more_than`
SET `salary` = `salary` + 5000
WHERE `department_id` = 1;

#4)Select the average salaries in each department from the new table
SELECT `department_id`, AVG(`salary`) AS `avg_salary` FROM `salary_more_than`
GROUP BY `department_id`
ORDER BY `department_id`;

#14. Employees Maximum Salaries
SELECT `department_id`, MAX(`salary`) AS `max_salary` FROM `employees`
GROUP BY `department_id`
HAVING `max_salary` NOT BETWEEN 30000 AND 70000
ORDER BY `department_id`;

#15. Employees Count Salaries
SELECT COUNT(`employee_id`) AS `count`
FROM `employees`
WHERE `manager_id` IS NULL;

#16. 3rd Highest Salary*
SELECT DISTINCT `department_id`,
(SELECT DISTINCT `salary`
FROM `employees` e
WHERE e.`department_id` = `employees`.`department_id`
ORDER BY `salary` DESC
LIMIT 1 OFFSET 2)
AS `third_highest_salary` FROM `employees`
HAVING `third_highest_salary` IS NOT NULL
ORDER BY `department_id`;


#17. Salary Challenge*
SELECT `first_name`, `last_name`, `department_id` FROM `employees` f
WHERE `salary` > (
SELECT AVG(`salary`)
FROM `employees` e
WHERE  e.`department_id` = f.`department_id`)
ORDER BY `department_id`, `employee_id`
LIMIT 10;

#18. Departments Total Salaries
SELECT `department_id`, SUM(`salary`) AS `total_salary`
FROM `employees`
GROUP BY `department_id`
ORDER BY `department_id`;

use `geography`;

-- 1. One-To-One Relationship

create table `passports` (
`passport_id`int primary key auto_increment,
`passport_number` varchar(50) unique
);

insert into `passports` (`passport_id`, `passport_number`)
values 
(101, "N34FG21B"),
(102, "K65LO4R7"),
(103, "ZE657QP2");

create table `people` (
`person_id` int primary key auto_increment, 
`first_name` varchar(200),
`salary` int,
`passport_id` int unique,
constraint `fk_people_passport`
foreign key (`passport_id`)
references `passports`(`passport_id`)
);

insert into `people` (`person_id`, `first_name`, `salary`, `passport_id`)
values 
(1, "Roberto", 43300.00, 102),
(2, "Tom", 56100.00, 103),
(3, "Yana", 60200.00, 101);


-- 2. One-To-Many Relationship
create database `manufacturers_models`;
use `manufacturers_models`;
create table `manufacturers` (
`manufacturer_id` int primary key auto_increment,
`name` varchar(200) not null unique,
`established_on` date
);

insert into `manufacturers` (`manufacturer_id`, `name`, `established_on`)
values 
(1, "BMW", "1916/03/01"),
(2, "Tesla", "2003/01/01"),
(3, "Lada", "1966/05/01");


create table `models` (
`model_id` int primary key,
`name` varchar(200) not null,
`manufacturer_id` int,
constraint `fk_model_manufacturer`
foreign key (`manufacturer_id`)
references `manufacturers`(`manufacturer_id`)
);

insert into `models` (`model_id`, `name`, `manufacturer_id`) 
values
(101, 'X1', 1),
(102, 'i6', 1),
(103, 'Model S', 2),
(104, 'Model X', 2),
(105, 'Model 3', 2),
(106, 'Nova', 3);


-- 3. Many-To-Many Relationship
create database `students_exams`;
use `students_exams`;

create table `students` (
`students_id` int primary key auto_increment,
`name` varchar(200) not null
);

insert into  `students` (`students_id`, `name`)
values 
(1,  "Mila"),
(2, "Toni"),
(3, "Ron");

create table `exams` (
`exam_id` int primary key auto_increment,
`name` varchar(200) not null
);

insert into `exams` (`exam_id`, `name`)
values
(101, "Spring MVC"),
(102, "Neo4j"),
(103, "Oracle 11g");

create table `students_exams` (
`student_id` int not null,
`exam_id` int not null,
constraint `pk`
primary key (`student_id`, `exam_id`),
constraint `fk_this_student`
foreign key (`student_id`)
references `students`(`student_id`),
constraint `fk_this_exam`
foreign key (`exam_id`)
references `exam`(`exam_id`)
);

-- 4. Self-Referencing

create table `teachers` (
`teacher_id` int primary key auto_increment,
`name` varchar(200) not null,
`manager_id` int 
);

insert into `teachers` (`teacher_id`, `name`, `manager_id`)
values 
(101, 'John', NULL),        
(102, 'Maya', 106),
(103, 'Silvia', 106),
(104, 'Ted', 105),
(105, 'Mark', 101),
(106, 'Greta', 101);

alter table `teachers`
add constraint `fk`
foreign key (`manager_id`)
references `teacher`(`teacher_id`);


-- 5. Online Store Database

create database `online_store`;
use `online_store`;

create table `cities` (
`city_id` int(11) primary key auto_increment,
`name` varchar (50)
);

create table `customers` (
`customer_id` int(11) primary key auto_increment,
`name` varchar(50) not null,
`birthdat` date,
`city_id` int(11)
);

alter table `customers` 
add constraint `fk_customers_city`
foreign key (`city_id`)
references `cities`(`city_id`);

create table `orders` (
`order_id` int primary key auto_increment,
`customer_id` int,
constraint `fk_orders_customers`
foreign key (`customer_id`)
references `customers`(`customer_id`)
);

create table `item_types` (
`item_type_id` int primary key auto_increment,
`name` varchar(50) not null
);

create table `items` (
`item_id` int primary key auto_increment,
`name` varchar(50) not null,
`item_type` int not null,
constraint `fk_items_ itemtype`
foreign key (`item_type`)
references `item_types`(`item_type_id`)
);

create table `order_items` (
`order_id` int not null,
`item_id` int not null,
constraint pk
primary key (`order_id`, `item_id`),
constraint fk_order
foreign key (`order_id`)
references `orders`(`order_id`),
constraint fk_items
foreign key (`item_id`)
references `items`(`item_id`)
);

-- 6. University Database

create database `university`;
use `university`;


create table `students` (
`student_id` int primary key auto_increment,
`student_number` varchar(12),
`student_name` varchar(50),
`major_id` int
);

create table `majors` (
`major_id` int primary key auto_increment,
`name` varchar(50)
);

alter table `students`
add constraint fk_students_majors
foreign key (`major_id`)
references `majors`(`major_id`);

create table `payments` (
`payement_id` int primary key auto_increment,
`payment_date` date,
`payment_amount` decimal (8,2),
`student_id` int,
constraint fk_payments_students
foreign key (`student_id`)
references `students`(`student_id`)
);

create table `subjects` (
`subject_id` int primary key auto_increment,
`subject_name` varchar(50)
);

create table `agenda` (
`student_id` int,
`subject_id` int,
constraint pk
primary key (`student_id`, `subject_id`),
constraint fk_agenda_students
foreign key (`student_id`)
references `students`(`student_id`),
constraint fk_agenda_subjects
foreign key (`subject_id`)
references `subjects`(`subject_id`)
);


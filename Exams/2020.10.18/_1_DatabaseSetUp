-- CATEGORIES

create table `categories` (
`id` int primary key auto_increment,
`name` varchar(40) not null unique
);

-- PICTURES

create table `pictures` (
`id` int primary key auto_increment,
`url` varchar(100) not null, 
`added_on` datetime not null
);


-- PRODUCTS

create table `products` (
`id` int primary key auto_increment,
`name` varchar(40) not null unique,
`best_before` date,
`price` decimal(10,2) not null,
`description` text,
`category_id` int,
`picture_id` int,

constraint fk_products_categories
foreign key (`category_id`)
references `categories`(`id`),

constraint fk_products_pictures
foreign key (`picture_id`)
references `pictures`(`id`)
);

create table `towns` (
`id` int primary key auto_increment,
`name` varchar(20) not null unique
);

-- ADDRESSES

create table `addresses` (
`id` int primary key auto_increment,
`name` varchar(50),
`town_id` int,

constraint fk_addresses_towns
foreign key (`town_id`)
references `towns`(`id`)
);

-- STORES

create table `stores` (
`id` int primary key auto_increment,
`name` varchar(20) not null unique,
`rating` float not null,
`has_parking` tinyint(1) default 0,
`address_id` int,

constraint fk_stores_addresses
foreign key (`address_id`)
references `addresses`(`id`)
);

-- EMPLOYEES

create table `employees` (
`id` int primary key auto_increment,
`first_name` varchar(15) not null,
`middle_name`char(1),
`last_name` varchar(20) not null,
`salary` decimal(19,2) default 0,
`hire_date` date not null,
`manager_id` int,
`store_id` int,

constraint fk_employees_stores
foreign key (`store_id`)
references `stores`(`id`),

constraint fk_employees_manager
foreign key (`manager_id`)
references `employees`(`id`)
);

create table `products_stores` (
`product_id` int,
`store_id` int,
constraint pk_products_stores
primary key (`product_id`, `store_id`),

constraint pk_products_stores
foreign key (`store_id`)
references `stores`(`id`),
 
constraint fk_ps_product
foreign key (`product_id`)
references `products`(`id`)
);

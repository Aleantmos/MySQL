create database `insta_influencers`;
use `insta_influencers`;

-- USERS

create table `users` (
`id` int primary key auto_increment,
`username` varchar(30) not null unique,
`password` varchar(30) not null,
`email` varchar(50) not null,
`gender` char(1) not null,
`age` int not null,
`job_title` varchar(40) not null,
`ip` varchar(30) not null
);

-- PHOTOS

create table `photos` (
`id` int primary key auto_increment,
`description` text not null,
`date` datetime not null,
`views` int not null default 0
);


-- COMMENTS

create table `comments` (
`id` int primary key auto_increment,
`comment` varchar(255),
`date` datetime,
`photo_id` int,

constraint fk_comments_addresses
foreign key (`photo_id`)
references `photos`(`id`)
);


-- LIKES

create table `likes` (
`id` int primary key auto_increment,
`photo_id` int,
`user_id` int,

constraint fk_likes_photos
foreign key (`photo_id`)
references `photos`(`id`),

constraint fk_users_likes
foreign key (`user_id`)
references `users`(`id`)
);


-- ADDRRESSES

create table `addresses` (
`id` int primary key auto_increment,
`address` varchar(30) not null,
`town` varchar(30) not null,
`country` varchar(30) not null,
`user_id` int not null,

constraint fk_addresses_users
foreign key (`user_id`)
references `users`(`id`)
);


-- USERS_PHOTOS


create table `users_photos` (
`user_id` int,
`photo_id` int,

key pk_users_photos (`user_id`, `photo_id`),

constraint fk_user_users
foreign key (`user_id`)
references `users`(`id`),

constraint fk_users_photos
foreign key (`photo_id`)
references `photos`(`id`)
);

